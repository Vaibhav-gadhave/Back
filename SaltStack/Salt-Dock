Basic config commands for Salt


salt-key --list all  >> This option is used to display information for all keys (both accepted and unaccepted).
salt-call key.finger --local >> it will output the fingerprint of the minion's public key, which is a unique identifier for the key.
salt-key -f master >>  it will output the fingerprint of the Salt Master's public key, typically in the form of a SHA256 hash.
salt-key -a master >> it will accept the public key for the Salt Master. This is typically done when you are setting up a new Salt environment or when you have reinstalled the Salt Master.
salt-key --list all >> command is used to list all keys, both accepted and unaccepted, on the Salt Master
salt-key -f node1 >> Displays the fingerprint of the public key for the minion named "node1".
salt-key -a node1 >>  Accepts the public key for the minion named "node1".

-----------------------Basic commands----------------------------

salt '*' test.ping >> Tests connectivity to all minions, returning a boolean indicating success.
salt '*' cmd.run "ls -lrth" >> Executes the ls -lrth command on all minions and returns the output.
salt '*' cmd.run "uptime" >> Retrieves the system uptime information from all minions.
salt '*' user.add 'vaibhav.gadhave' >> Adds a user named 'vaibhav.gadhave' on all minions.
salt '*' user.delete 'vaibhav.gadhave' remove=true >> Deletes the user 'vaibhav.gadhave' on all minions, including their home directory.
salt '*' file.append /tmp/tata.txt 'hello Vaibhav' >> Appends 'hello Vaibhav' to the file /tmp/tata.txt on all minions.
salt '*' pkg.install git net-tools >> Installs the 'git' and 'net-tools' packages on all minions.
salt '*' pkg.install git >> Installs the 'git' package on all minions.

--------------------------Grains-------------------------
salt 'master*' grains.items >> Retrieves all grain items (system properties) from minions whose IDs start with 'master'.
salt 'master*' grains.item host >> Retrieves information about hostname
salt '*' grains.item os_family >>
salt '*' grains.item osrelease >>
salt 'node*' saltutil.sync_all >> Synchronizes all Salt modules, states, and pillars on minions whose IDs start with 'm'. 
salt 'node*' service.status ssh >> turns on ther service ssh of all the minions
salt -G 'os:Ubuntu' grains.item dns >> This command specifically targets minions where the operating system grain is set to 'Ubuntu' and fetches the value associated with the 'dns' grain item. 
salt -C 'G@os_family:Debian and G@osrelease:20.04' grains.get osfullname >> used to target minions whose operating system family is Debian and have an operating system release of 20.04. It retrieves the value of the 'osfullname' grain item from these specific minions. This command is filtering minions based on specific criteria and then extracting information about the full name of their operating system.

---------------------------Pillars-----------------------

################# 1.Sample Pillar file to create a file in minions ##########
# File: create_files.sls

{% set file_content = 'Hello, this is a sample content.' %}

/tmp/sample_file1.txt:
  file.managed:
    - source: salt://files/sample.txt
    - user: root
    - group: root
    - mode: '0644'

## This will fetch the from master path : /srv/salt/files/sample.txt and will push on minion path /tmp/sample_file.txt

/tmp/sample_file2.txt:
  file.managed:
    - contents: |
        This is another file with custom content.
    - user: root
    - group: root
    - mode: '0644'

## This will create a sample file with the contents in minions path /tmp/sample_file2.txt

########################################## End of Pillar########### 
