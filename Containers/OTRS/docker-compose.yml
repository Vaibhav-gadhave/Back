# OTRS with Let's Encrypt in a Docker Compose

# Vladimir Mikhalev
# callvaldemar@gmail.com
# www.heyvaldemar.com

# Install the Docker Engine by following the official guide: https://docs.docker.com/engine/install/
# Install the Docker Compose by following the official guide: https://docs.docker.com/compose/install/

# Deploy OTRS server with a Docker Compose using the command:
# docker-compose -f otrs-traefik-letsencrypt-docker-compose.yml -p otrs up -d

# Administration Interface
# https://otrs.heyvaldemar.net/otrs/index.pl

# Customer Interface
# https://otrs.heyvaldemar.net/otrs/customer.pl

volumes:
  mysql-data:
  otrs-config:
  otrs-skins:
  otrs-backups:
  otrs-addons:
  otrs-database-upgrade:
  traefik-certificates:

services:
  mariadb:
    image: juanluisbaptiste/otrs-mariadb:latest
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      OTRS_DB_HOST: mariadb
      OTRS_DB_PORT: 3306
      # Database name (replace with yours)
      OTRS_DB_NAME: otrsdb
      # Database user (replace with yours)
      OTRS_DB_USER: otrsdbuser
      # Database password (replace with yours)
      OTRS_DB_PASSWORD: RrKavLfXEmdwVLvF7JsR
      # MySQL root username
      MYSQL_ROOT_USER: root
      # MySQL root password (replace with yours)
      MYSQL_ROOT_PASSWORD: uNxRFhaG43PcUFiVwkfq
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  otrs:
    # Image tag (replace with yours)
    image: juanluisbaptiste/znuny:6.0.33
    volumes:
      - otrs-config:/opt/otrs/Kernel'
      - otrs-skins:/opt/otrs/var/httpd/htdocs/skins/
      - otrs-backups:/var/otrs/backups
      - otrs-addons:/opt/otrs/addons
      - otrs-database-upgrade:/opt/otrs/db_upgrade
    environment:
      # OTRS language (replace with yours)
      OTRS_LANGUAGE: en
      # root@localhost password (replace with yours)
      OTRS_ROOT_PASSWORD: tQvwQhJR2brV46pedJsH
      # Default timezone (replace with yours)
      OTRS_TIMEZONE: UTC
      # Starting point for the ticket counter (replace with yours)
      OTRS_TICKET_COUNTER: 1
      OTRS_INSTALL: 'no'
      OTRS_NUMBER_GENERATOR: AutoIncrement
      OTRS_SET_PERMISSIONS: 'yes'
      OTRS_DB_HOST: mariadb
      OTRS_DB_PORT: 3306
      # Database name (replace with yours)
      OTRS_DB_NAME: otrsdb
      # Database user (replace with yours)
      OTRS_DB_USER: otrsdbuser
      # Database password (replace with yours)
      OTRS_DB_PASSWORD: RrKavLfXEmdwVLvF7JsR
      # MySQL root username
      MYSQL_ROOT_USER: root
      # MySQL root password (replace with yours)
      MYSQL_ROOT_PASSWORD: uNxRFhaG43PcUFiVwkfq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - "traefik.enable=true"
      # OTRS URL (replace with yours)
      - "traefik.http.routers.otrs.rule=Host(`otrs.heyvaldemar.net`)"
      - "traefik.http.routers.otrs.service=otrs"
      - "traefik.http.routers.otrs.entrypoints=websecure"
      - "traefik.http.services.otrs.loadbalancer.server.port=80"
      - "traefik.http.routers.otrs.tls=true"
      - "traefik.http.routers.otrs.tls.certresolver=letsencrypt"
      - "traefik.http.services.otrs.loadbalancer.passhostheader=true"
      - "traefik.http.routers.otrs.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
      traefik:
        condition: service_healthy

  traefik:
    # Image tag (replace with yours)
    image: traefik:2.4
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Email for Let's Encrypt (replace with yours)
      - "--certificatesresolvers.letsencrypt.acme.email=callvaldemar@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      # Traefik URL (replace with yours)
      - "traefik.http.routers.dashboard.rule=Host(`traefik.otrs.heyvaldemar.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      # Basic Authentication for Traefik Dashboard
      # Username: traefikadmin (replace with yours)
      # Passwords must be encoded using MD5, SHA1, or BCrypt https://hostingcanada.org/htpasswd-generator/
      - "traefik.http.middlewares.authtraefik.basicauth.users=traefikadmin:$$2y$$10$$sMzJfirKC75x/hVpiINeZOiSm.Jkity9cn4KwNkRvO7hSQVFc5FLO"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped