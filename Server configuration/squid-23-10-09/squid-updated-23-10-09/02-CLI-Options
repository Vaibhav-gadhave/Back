                                          SQUID 
					  =====

                                      CLI Options 
			              ===========
  
   # squid -k 

===========>  parse            Check if squid.conf is OK and syntax-free

===========>  check            Check if SQUID is running

===========>  reconfigure      Re-Read squid.conf w/o stopping [refresh]

                               aka  service squid reload 

              rotate           rotate the log files
              shutdown         Shutdown SQUID gracefully 
                               
			       aka  service squid stop
			       
              interrupt        Kill SQUID w/o waiting for trns to finish    
              kill             Kill SQUID mercilessly
              debug            Puts SQUID in debugging mode 

   # squid -N                  Is SQUID running ?
   
   # squid -Nd1                Is DNS working ?

   # squid -zX                 Init the cache / swap dirs. Used when running
                               SQUID for the first time.
			       Done by SQUID initscript anyway [start()]
			       X --> To watch the progress of cache creating
			       SQUID should not be running when this is done! 

   # squid -F                  Make SQUID refuse all requests until it rebuilds
                               the storage metadata
			       Done by SQUID initscript anyway [start()]
   
   # squid -D                  Disables/prevents initial DNS tests
			       Done by SQUID initscript anyway [start()]

			       Already specified in /etc/sysconfig/squid 
			       which is read by squid's initscript
                                 
   # squid -N -d1 -D           Run SQUID with logging to stderr in the fg not bg
                               with level 1 debugging
   
                               -N  -> Keep SQUID in the fg
			              Does not read /etc/sysconfig/squid
				      
			       -d1 -> Display level 1 debugging to stderr

                                -D  -> Don't bother with DNS and die
			              since Squid tries to do DNS lookups for 
				      a few common domains, 
				      and dies with an error if it is not able
				      to resolve them thru  /etc/resolv.conf
				      See Directive #11 dns_testnames
   
   # squid -N                  Prevent SQUID from becoming a bg process

   # squid -s                  Enable logging to the syslogd daemon
                               SQUID uses LOCAL4 syslog facility
                         Level 0 debug msgs are logged with priority LOG_WARNING
                         Level 1 debug msgs are logged with priority LOG_NOTICE
  
                              =======================
                                  Starting SQUID 
				       in
				  Debugging Mode 
				      for
				    Testing 
		              =======================

1. Let's start SQUID in the fg, ignoring DNS, with Level 1 Debug :

   [root@ganesh root]# squid -N -d 1 -D
   
   2005/09/10 09:05:28| Starting Squid Cache version 2.5.STABLE1 for i386-redhat-linux-gnu...
   2005/09/10 09:05:28| Process ID 1412
   2005/09/10 09:05:28| With 1024 file descriptors available <---- Increase in
                                                                kernel, if reqd
   2005/09/10 09:05:28| DNS Socket created at 0.0.0.0, port 32769, FD 5
   2005/09/10 09:05:28| Adding nameserver 192.168.1.1 from /etc/resolv.conf 
   2005/09/10 09:05:28| Unlinkd pipe opened on FD 10
   2005/09/10 09:05:28| Swap maxSize 102400 KB, estimated 7876 objects
   2005/09/10 09:05:28| Target number of buckets: 393
   2005/09/10 09:05:28| Using 8192 Store buckets
   2005/09/10 09:05:28| Max Mem  size: 8192 KB
   2005/09/10 09:05:28| Max Swap size: 102400 KB
   2005/09/10 09:05:28| Rebuilding storage in /var/spool/squid (CLEAN)
   2005/09/10 09:05:28| Using Least Load store dir selection
   2005/09/10 09:05:28| Set Current Directory to /var/spool/squid
   2005/09/10 09:05:28| Loaded Icons.
   2005/09/10 09:05:28| Accepting HTTP connections at 0.0.0.0, port 3128, FD 12.
   2005/09/10 09:05:28| Accepting ICP messages at 0.0.0.0, port 3130, FD 13.
   2005/09/10 09:05:28| WCCP Disabled.
   2005/09/10 09:05:28| Ready to serve requests.
   2005/09/10 09:05:28| Done reading /var/spool/squid swaplog (326 entries)
   2005/09/10 09:05:28| Finished rebuilding storage from disk.
   2005/09/10 09:05:28|         0 Entries scanned  <--- No objects in the cache
   2005/09/10 09:05:28|         0 Invalid entries.
   2005/09/10 09:05:28|         0 With invalid flags.
   2005/09/10 09:05:28|         0 Objects loaded.
   2005/09/10 09:05:28|         0 Objects expired.
   2005/09/10 09:05:28|         0 Objects cancelled.
   2005/09/10 09:05:28|         0 Duplicate URLs purged.
   2005/09/10 09:05:28|         0 Swapfile clashes avoided.
   2005/09/10 09:05:28|   Took 0.3 seconds (0.0 objects/sec).
   2005/09/10 09:05:28| Beginning Validation Procedure
   2005/09/10 09:05:28|   Completed Validation Procedure
   2005/09/10 09:05:28|   Validated 0 Entries
   2005/09/10 09:05:28|   store_swap_size = 21k
   2005/09/10 09:05:29| storeLateRelease: released 0 objects

     SQUID now runs in the fg.

                              =======================
                              Testing The SQUID Cache
		                      with 
		                client* [deprecated]
		                       or 
			           squidclient*
		              =======================

   1. If you are on the Cache Server [ganesh], this would do :

         # squidclient http://www.indya.com

                 Using the -h and -p client Options
		 ==================================
		 
   2. From a Client you would do this :  [Accessing a Cached Page]
 
======>  # squidclient -h ganesh.bom.labs.net -p 3128 http://www.indya.com
	   or 
======>  # configure elinks to point to the cache server and port 3128

	   Do This:
	       Esc
	         Setup
		     OptionsManager
		                  Protocols
				          http
					     ProxyConfiguration
	       Then enter : IP of CacheServer:Port

	   Do not forget to exit elinks FULLY everytime you visit a site
	   to prevent caching and misleading results 

      You would see this in access.log which logs all incoming requests :

      /var/log/squid/access.log:
      =========================

      1          2      3            4          5    6         7              8       9                10
1126681613.343 3219 192.168.1.10 TCP_MISS/200 28839 GET http://www.indya.com/ - DIRECT/203.199.124.49 txt/html

      *  TCP_MISS indicates that the cache has no answer and
         DIRECT/203.199.124.49 is the origin server from which the page 
  was retrieved
      *  It took 3219 ms or 3.319 secs to do this 

      
======>  Now run the command again from the client :

         # squidclient -h ganesh.bom.labs.net -p 3128 http://www.indya.com

      1         2        3            4              5    6         7              8       9                10
1126681627.171 66 192.168.1.10 TCP_REFRESH_HIT/200 28838 GET http://www.indya.com/ - DIRECT/203.199.124.49 text/html

      *  TCP_REFRESH_HIT indicates SQUID found a stale copy in the cache and 
         sent a validation request to the origin server, which returned a "304 
  not modified" indicating SQUID's copy is fresh
  or 200 that means all is OK
      *  Also It took just 66 ms to do this 

======>   Now run the command ONCE AGAIN from the client :

         # client -h ganesh.bom.labs.net -p 3128 http://www.indya.com

      1         2        3            4      5    6         7              8   9       10
1126681646.734  4 192.168.1.10 TCP_HIT/200 28847 GET http://www.indya.com/ - NONE/- text/html

      *  TCP_HIT indicates SQUID found a extant copy in the cache and served it
         NONE means SQUID did not fwd this request to any other servers
      *  Also It took just 4 ms to do this. A huge difference ! 

 Imp fields :
 
 Field 4 - The Log field  TCP_MISS, TCP_HIT
 Field 7 - The URL 
 Field 9 - hierarchy access type 
 
 Note that a  "-" indicates that there is no data for that field
 
 Though fields are seperated by spaces, fields can contain sub-fields, 
 where a "/" indicates the split.
 
 When connecting directly to a destination server, field 9 contains two 
 subfields - the key word "DIRECT", followed by the name of the server that it 
 is connecting to. Access to local servers (on your network) should always be 
 DIRECT, even if you have a firewall

 This is again a direct HTTP request

            Retrieving Pages directly from a remote site with client
            ========================================================
    
      The client program can also be used to access web sites directly 
      bypassing the cache.
      The protocol that clients use to access pages through a cache is part of 
      the HTTP specification. 
   
      The client program can be used to send both "normal" and "cache" HTTP 
      requests. To check that your cache machine can actually connect to the 
      outside world, it's a good idea to test access to an outside web server.

   3. If you wished to access the Web site directly and avoid the Cached
      Page in the Cache server do this :

         # squidclient -h www.indya.com -p 80 /  
	 
           [Bypassing the Cache and Accessing the Origin Server]

      Here you're telling client to connect directly to the remote site, 
      and request the page /. 
	   
      With a request through a cache server, you connect to the cache 
      (as you would expect) and request a whole url instead of just the 
      path to a file. 
	   
      In essence, both cache-HTTP and normal-HTTP requests are identical; 
      one [former] just happens to refer to a whole URL, the other to a file.
	  
   This would be good for testing dstdomain ACLs 
   
        # squidclient [-p 4128] http://blocked.host.name/blah/blah

   If you have src ACL that block requests from outside your NW, you may
   have to test them using an external host [another m/c]

   To test arbitrary requests headers use -H.
   
   Eg To test a browser ACL use the following :
   
     # squidclient [-p 4128] http://blocked.host.name/blah/blah \
       -H 'User-Agent: Mozilla/5.0 (compatible; Konqueror/3)\r\n'


Starting SQUID	from /etc/inittab
=================================

sq:2345:respawn:squid -Ns              
	
	             ********************
