Please refer the below website for snipe-IT installation

Requirements
processor : 2 core
RAM : minimum 2 GB
ip : 192.168.122.9

==============================================================================
For installing in Ubuntu

https://blog.masteringmdm.com/snipe-it-installation-on-ubuntu-server-nginx/

==============================================================================
For installing in Centos  >> Please follow the below steps

https://zoomtutorials.com/how-to-install-snipe-it-asset-management-system-on-centos-7/

==============================================================================

yum update -y

yum install epel-release

rpm -Uvh http://rpms.remirepo.net/enterprise/remi-release-7.rpm

yum -y install yum-utils

yum-config-manager --enable remi-php71  # [Install PHP 7.1]

yum-config-manager --enable remi-php72 # [Install PHP 7.2]

yum-config-manager --enable remi-php73  # [Install PHP 7.3]

yum -y install httpd php php-mysql php-openssl php-curl php-ldap php-zip php-pdo php-mbstring php-tokenizer php-curl php-ldap php-zip php-fileinfo php-gd php-dom php-mcrypt

php --version

systemctl start httpd

systemctl status httpd

systemctl enable httpd

==============================================================================

yum -y install mariadb mariadb-server

systemctl start mariadb.service

systemctl enable mariadb.service

mysql_secure_installation

==============================================================================

mysql -u root -p

CREATE DATABASE exampledb;
CREATE USER 'example_user'@'localhost' IDENTIFIED BY 'StrongPassword';
GRANT ALL PRIVILEGES ON exampledb.* TO 'example_user'@'localhost';
FLUSH PRIVILEGES;
EXIT;

==============================================================================

curl -sS https://getcomposer.org/installer | php

mv composer.phar /usr/bin/composer

yum install git

cd  /var/www/

git clone https://github.com/snipe/snipe-it snipe-it

cd /var/www/snipe-it

==============================================================================

vim .env

# --------------------------------------------
# REQUIRED: BASIC APP SETTINGS
# --------------------------------------------
APP_ENV=production
APP_DEBUG=false
APP_KEY=base64:RsNWegRxJyW337mQ5mWEfepSNAXvT9Ba2FmhWVWyHGc=
APP_URL=http://192.168.122.9
APP_TIMEZONE='UTC'
APP_LOCALE=en
MAX_RESULTS=500

# --------------------------------------------
# REQUIRED: UPLOADED FILE STORAGE SETTINGS
# --------------------------------------------
PRIVATE_FILESYSTEM_DISK=local
PUBLIC_FILESYSTEM_DISK=local_public

# --------------------------------------------
# REQUIRED: DATABASE SETTINGS
# --------------------------------------------
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_DATABASE=exampledb
DB_USERNAME=example_user
DB_PASSWORD=StrongPassword
DB_PREFIX=null
DB_DUMP_PATH='/usr/bin'
DB_CHARSET=utf8mb4
DB_COLLATION=utf8mb4_unicode_ci

# --------------------------------------------
# OPTIONAL: SSL DATABASE SETTINGS
# --------------------------------------------
DB_SSL=false
DB_SSL_IS_PAAS=false
DB_SSL_KEY_PATH=null
DB_SSL_CERT_PATH=null
DB_SSL_CA_PATH=null
DB_SSL_CIPHER=null

# --------------------------------------------
# REQUIRED: OUTGOING MAIL SERVER SETTINGS
# --------------------------------------------
MAIL_DRIVER=smtp
MAIL_HOST=email-smtp.us-west-2.amazonaws.com
MAIL_PORT=587
MAIL_USERNAME=YOURUSERNAME
MAIL_PASSWORD=YOURPASSWORD
MAIL_ENCRYPTION=null
MAIL_FROM_ADDR=you@example.com
MAIL_FROM_NAME='Snipe-IT'
MAIL_REPLYTO_ADDR=you@example.com
MAIL_REPLYTO_NAME='Snipe-IT'
MAIL_AUTO_EMBED_METHOD='attachment'

# --------------------------------------------
# REQUIRED: IMAGE LIBRARY
# This should be gd or imagick
# --------------------------------------------
IMAGE_LIB=gd


# --------------------------------------------
# OPTIONAL: BACKUP SETTINGS
# --------------------------------------------
MAIL_BACKUP_NOTIFICATION_DRIVER=null
MAIL_BACKUP_NOTIFICATION_ADDRESS=null
BACKUP_ENV=true


# --------------------------------------------
# OPTIONAL: SESSION SETTINGS
# --------------------------------------------
SESSION_LIFETIME=12000
EXPIRE_ON_CLOSE=false
ENCRYPT=false
COOKIE_NAME=snipeit_session
COOKIE_DOMAIN=null
SECURE_COOKIES=false
API_TOKEN_EXPIRATION_YEARS=15

# --------------------------------------------
# OPTIONAL: SECURITY HEADER SETTINGS
# --------------------------------------------
APP_TRUSTED_PROXIES=192.168.1.1,10.0.0.1
ALLOW_IFRAMING=false
REFERRER_POLICY=same-origin
ENABLE_CSP=false
CORS_ALLOWED_ORIGINS=null
ENABLE_HSTS=false

# --------------------------------------------
# OPTIONAL: CACHE SETTINGS
# --------------------------------------------
CACHE_DRIVER=file
SESSION_DRIVER=file
QUEUE_DRIVER=sync
CACHE_PREFIX=snipeit

# --------------------------------------------
# OPTIONAL: REDIS SETTINGS
# --------------------------------------------
REDIS_HOST=null
REDIS_PASSWORD=null
REDIS_PORT=null

# --------------------------------------------
# OPTIONAL: MEMCACHED SETTINGS
# --------------------------------------------
MEMCACHED_HOST=null
MEMCACHED_PORT=null

# --------------------------------------------
# OPTIONAL: PUBLIC S3 Settings
# --------------------------------------------
PUBLIC_AWS_SECRET_ACCESS_KEY=null
PUBLIC_AWS_ACCESS_KEY_ID=null
PUBLIC_AWS_DEFAULT_REGION=null
PUBLIC_AWS_BUCKET=null
PUBLIC_AWS_URL=null
PUBLIC_AWS_BUCKET_ROOT=null

# --------------------------------------------
# OPTIONAL: PRIVATE S3 Settings
# --------------------------------------------
PRIVATE_AWS_ACCESS_KEY_ID=null
PRIVATE_AWS_SECRET_ACCESS_KEY=null
PRIVATE_AWS_DEFAULT_REGION=null
PRIVATE_AWS_BUCKET=null
PRIVATE_AWS_URL=null
PRIVATE_AWS_BUCKET_ROOT=null

# --------------------------------------------
# OPTIONAL: LOGIN THROTTLING
# --------------------------------------------
LOGIN_MAX_ATTEMPTS=5
LOGIN_LOCKOUT_DURATION=60
RESET_PASSWORD_LINK_EXPIRES=900

# --------------------------------------------
# OPTIONAL: MISC
# --------------------------------------------
APP_LOG=single
APP_LOG_MAX_FILES=10
APP_LOCKED=false
APP_CIPHER=AES-256-CBC
APP_FORCE_TLS=false
GOOGLE_MAPS_API=
LDAP_MEM_LIM=500M
LDAP_TIME_LIM=600
IMPORT_TIME_LIMIT=600
IMPORT_MEMORY_LIMIT=500M
REPORT_TIME_LIMIT=12000

==============================================================================

sudo chown -R apache:apache storage public/uploads

sudo chmod -R 755 storage public/uploads

composer install --no-dev --prefer-source

composer update

php artisan key:generate

firewall-cmd --zone=public --permanent --add-service=http

firewall-cmd --reload

==============================================================================

vim /etc/httpd/conf.d/snipeit.example.com.conf

<VirtualHost *:80>
    ServerName snipeit.example.com
    DocumentRoot /var/www/snipe-it/public
    <Directory /var/www/snipe-it/public>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
    </Directory>
</VirtualHost>

==============================================================================

systemctl restart httpd

yum provides /usr/sbin/semanage  # check the package version and then install 

yum install policycoreutils-python

semanage fcontext -a -t httpd_sys_rw_content_t "/var/www/snipe-it(/.*)/?"

restorecon -R -v  /var/www/snipe-it/

semanage fcontext -a -t httpd_sys_rw_content_t "/var/www/snipe-it/storage(/.*)?"

restorecon -RF /var/www/snipe-it/storage

setsebool -P httpd_can_network_connect on

==============================================================================

http://snipeit.example.com

==============================================================================













